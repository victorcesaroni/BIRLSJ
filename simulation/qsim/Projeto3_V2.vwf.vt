// Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "11/28/2016 15:34:23"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          Projeto3_V2
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module Projeto3_V2_vlg_vec_tst();
// constants                                           
// general purpose registers
reg CLOCK;
// wires                                               
wire [31:0] DBG_INSTRUCAO_ID;
wire [31:0] DBG_INSTRUCAO_IF;
wire [31:0] DBG_PC_ID;
wire [31:0] DBG_PC_IF;
wire [31:0] DBG_R0_DATA;
wire [31:0] DBG_R1_DATA;
wire [31:0] DBG_R2_DATA;
wire [31:0] DBG_R3_DATA;
wire [31:0] DBG_R4_DATA;
wire [31:0] DBG_R5_DATA;
wire [31:0] DBG_R6_DATA;
wire [4:0] DBG_REGWRITE_ADDR;

// assign statements (if any)                          
Projeto3_V2 i1 (
// port map - connection between master ports and signals/registers   
	.CLOCK(CLOCK),
	.DBG_INSTRUCAO_ID(DBG_INSTRUCAO_ID),
	.DBG_INSTRUCAO_IF(DBG_INSTRUCAO_IF),
	.DBG_PC_ID(DBG_PC_ID),
	.DBG_PC_IF(DBG_PC_IF),
	.DBG_R0_DATA(DBG_R0_DATA),
	.DBG_R1_DATA(DBG_R1_DATA),
	.DBG_R2_DATA(DBG_R2_DATA),
	.DBG_R3_DATA(DBG_R3_DATA),
	.DBG_R4_DATA(DBG_R4_DATA),
	.DBG_R5_DATA(DBG_R5_DATA),
	.DBG_R6_DATA(DBG_R6_DATA),
	.DBG_REGWRITE_ADDR(DBG_REGWRITE_ADDR)
);
initial 
begin 
#1000000 $finish;
end 

// CLOCK
always
begin
	CLOCK = 1'b0;
	CLOCK = #50000 1'b1;
	#50000;
end 
endmodule

